// This file has been autogenerated from a class added in the UI designer.

using System;
using Assessment.Models;
using Foundation;
using UIKit;

namespace Assessment.iOS
{
	public partial class CreateReminderViewController : UIViewController
	{
        public ReminderListViewModel ViewModel;
        public CreateReminderViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            StyleUI();

            swtDateSwitch.AddTarget(switchFlipped, UIControlEvent.ValueChanged);
            btnSave.TouchUpInside += (sender, e) =>
            {
                DateTime? date = null;
                if (swtDateSwitch.On)
                {
                    date = (DateTime)DatePicker.Date;
                }
                var reminder = new Reminder
                {
                    Title = txtTitle.Text,
                    Deails = txtDetails.Text,
                    DueDate = date,
                    ListId = ViewModel.ReminderList.Id
                };
                ViewModel.AddReminderCommand.Execute(reminder);
                this.DismissModalViewController(true);
            };

            btnCancel.TouchUpInside += (sender, e) =>
            {
                this.DismissModalViewController(true);
            };

        }

        private void switchFlipped(object sender, EventArgs e)
        {
            DatePicker.Hidden = !swtDateSwitch.On;
        }

        void StyleUI()
        {
            swtDateSwitch.On = false;
            DatePicker.Hidden = true;
            txtDetails.ClipsToBounds = true;
            txtDetails.Layer.BorderWidth = 1;
            txtDetails.Layer.BorderColor = UIColor.LightGray.CGColor;
            txtDetails.Layer.CornerRadius = 5;
        }
    }
}
